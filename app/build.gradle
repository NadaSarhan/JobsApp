//plugins {
//    id 'com.android.application'
//    id 'kotlin-android'
//    id 'kotlin-android-extensions'
//}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.nada.jobsapp"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'

    // -- UI
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

//    //ViewModel and liveData
//    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
//    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'

//    // -- Room component
//    def room_version = "2.3.0"
//    implementation("androidx.room:room-runtime:$room_version")
//    annotationProcessor "androidx.room:room-compiler:$room_version"

//    // -- Retrofit2
//    def retrofit2_version = "2.6.0"
//    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
//    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"


//    // To use Kotlin annotation processing tool (kapt)
//    kapt("androidx.room:room-compiler:$room_version")
//    // To use Kotlin Symbolic Processing (KSP)
////    ksp("androidx.room:room-compiler:$room_version")
//    // optional - Kotlin Extensions and Coroutines support for Room
//    implementation("androidx.room:room-ktx:$room_version")
//    // optional - RxJava2 support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"
//    // optional - RxJava3 support for Room
//    implementation "androidx.room:room-rxjava3:$room_version"
//    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation "androidx.room:room-guava:$room_version"
//    // optional - Test helpers
//    testImplementation("androidx.room:room-testing:$room_version")

//    implementation "android.arch.persistence.room:runtime:1.1.1-alpha2"
//    annotationProcessor "android.arch.persistence.room:compiler:1.1.1-alpha2"
//    kapt "android.arch.persistence.room:compiler:1.1.1-alpha2"
//    compile "org.jetbrains.anko:anko:0.10.4"

    // -- Lifecycle Components (ViewModel, LiveData and ReactiveStreams)
//    def lifecycle_version = "2.4.0-alpha03"
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
//    // ViewModel
//    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
//    // LiveData
//    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
//    // Lifecycle only (without ViewModel or LiveData)
//    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // -- RecyclerView
//    def recyclerview_version = "1.2.0-beta03"
//    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
//    // For control over item selection of both touch and mouse driven selection
//    implementation "androidx.recyclerview:recyclerview-selection:$recyclerview_version"

//    // -- Leak Canary (detecting memory leaks)
//    def leak_canary_version = "2.0-alpha-3"
//    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    // -- Testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Added Dependencies
    implementation "androidx.recyclerview:recyclerview:1.2.0"

    // lifecycle
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
//    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.2'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"

    implementation 'com.github.bumptech.glide:glide:4.11.0'

//retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:4.8.1"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'


//Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"

}